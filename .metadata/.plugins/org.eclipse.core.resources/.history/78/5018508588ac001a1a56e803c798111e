package com.example.demo.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.Booking;
import com.example.demo.entity.User;
import com.example.demo.repository.LocationRepository;
import com.example.demo.repository.UserRepository;

/* Request Booking:- http://localhost:8080/api/v1/save_location
 * Booking History:- http://localhost:8080/api/v1/history/1 or http://localhost:8080/api/v1/1
*/

@RestController
@RequestMapping("api/v1")
public class LocationController {
	
	@Autowired
	LocationRepository locationRepository;
	
	@Autowired
	UserRepository userRepository;
	
	

/*	@PostMapping("/save_location")
	public ResponseEntity<?> getLocationForRequestBooking(@RequestBody Booking location) {
		System.out.println("Booking============ " + location);
		
		System.out.println("=================================="+location.getUser());
		
		
		Booking b = locationRepository.save(location);
		b.setUser(location.getUser());
		return new ResponseEntity<Booking>(b, HttpStatus.CREATED);
	}*/
	
	@PostMapping("/save_location")
	public ResponseEntity<?> getLocationForRequestBooking(@RequestBody Booking booking) {
		
		List<Booking>bookingList=new ArrayList<Booking>();
		System.out.println("Booking============ " + booking);
		
		System.out.println("=======user==========================="+booking);
		
		User user=userRepository.findByUserId(1);
		
		booking.setUser(user);
		
		bookingList.add(booking);
		
		user.setBookings(bookingList);
		
		userRepository.save(user);
		
		
		
		return new ResponseEntity<String>("Booking successful!",HttpStatus.OK);
		//return  locationRepository.save(location);
		
	}
	@GetMapping("history/{userId}")
	public List<Booking> getHistoryOfUser(@PathVariable Integer userId) {
		
		User user=userRepository.findByUserId(userId);
		
		System.out.println("######################"+user);
		List<Booking> bookings=user.getBookings();
		System.out.println("*****************************************"+bookings);

		return bookings;
	}
	
	
	
	
	
/*	@PostMapping("/{pick_location}/{drop_location}")
	public ResponseEntity<?> getSourceAndDestinationLocation( 
									@PathVariable String pick_location, @PathVariable String drop_location) {
		
		// http://localhost:8080/api/v1/KarveNagar/Warje
		
		System.out.println("pickLocation============ "+ pick_location);
		System.out.println("dropLocation============ "+ drop_location);
		
		return new ResponseEntity<Location>(HttpStatus.OK);
		
	}
*/
	
	/*
	@GetMapping("/{user_id}")
	public Optional<Location> getHistoryOfUserBooking(@PathVariable Integer user_id) {
	// http://localhost:8080/api/v1/1
		System.out.println("user_id=========="+ user_id);
		return locationRepository.findById(user_id);
	}	
*/	


}
